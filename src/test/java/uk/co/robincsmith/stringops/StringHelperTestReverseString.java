package uk.co.robincsmith.stringops;

import static org.junit.Assert.*;

import java.util.Arrays;
import java.util.Collection;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

/**
 * Tests the reverseString() method of the StringHelper class. Uses
 * parametrised testing.
 * @author Robin Smith
 */
@RunWith(Parameterized.class)
public class StringHelperTestReverseString
{
    private StringHelper sh = new StringHelper();
    
    // Test parameters
    private String input;
    private String expectedOutput;

    /**
     * Constructor for the test cases. Parameters are generated by
     * generateParameters().
     * @param input Input for the test case
     * @param expectedOutput Expected resultant String for comparison
     */
    public StringHelperTestReverseString(String input, String expectedOutput)
    {
        super();
        this.input = input;
        this.expectedOutput = expectedOutput;
    }
    
    /**
     * Generate the parameters used by the test cases.
     * @return A collection of input/expectedOutput arrays to be passed to the
     * constructor each time a test case is run
     */
    @Parameters
    public static Collection<String[]> generateParameters()
    {
        String[][] parameters = {
                {"", ""},
                {"a", "a"},
                {"ab", "ba"},
                {"abcd", "dcba"},
        };
        return Arrays.asList(parameters);
    }

    /**
     * The test to be run in each test case. Parameters are set in the
     * constructor.
     */
    @Test
    public void test()
    {
        assertEquals(expectedOutput, sh.reverseString(input));
    }
}
